version: '2'

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data

services:
  prometheus:
    build: prometheus
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: always
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    build: alertmanager
    container_name: alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: always
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.17.0
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.32.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: always
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    build: grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER: ${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD: ${ADMIN_PASS}
      - GF_USERS_ALLOW_SIGN_UP: false
      - VIRTUAL_HOST: ${VIRTUAL_HOST}
      - NETWORK_ACCESS: true
    restart: always
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"


  pushgateway:
    image: prom/pushgateway:v0.7.0
    container_name: pushgateway
    restart: always
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    build: caddy
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    environment:
      - ADMIN_USER: ${ADMIN_USER}
      - ADMIN_PASSWORD: ${ADMIN_PASS}
    restart: always
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
