volumes:
  nextcloud_data:
    driver: local
    name: nextcloud_data
  db_data:
    driver: local
    name: db_data
  nas_data:
    driver: local
    driver_opts:
      type: cifs
      o: addr=${NAS_ADDR},username=${NAS_USER},password=${NAS_PASSWORD},file_mode=0777,dir_mode=0777,rw,vers=3.0
      device: //${NAS_ADDR}/Public/${NAS_FOLDER}
    name: nas_data

services:
  db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    networks:
      - interne

  app:
    image: nextcloud:${NEXTCLOUD_TAG}
    environment:
      VIRTUAL_HOST: ${APP_HOSTNAME}
      NETWORK_ACCESS: ${NETWORK_RESTRICTION}
      TRUSTED_PROXIES: reverse-proxy
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: db:3306
    volumes:
      - nextcloud_data:/var/www/html
      - nas_data:/var/www/html/data
    restart: always
    networks:
      - interne
      - proxy
      - mailing
      - internet
    depends_on:
      - db

  cron:
    image: nextcloud:${NEXTCLOUD_TAG}
    entrypoint: /cron.sh
    environment:
      TRUSTED_PROXIES: reverse-proxy
    volumes:
      - nextcloud_data:/var/www/html
      - nas_data:/var/www/html/data
    restart: always
    networks:
      - interne
    depends_on:
      - db

networks:
  interne:
    driver: bridge
    internal: true
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
  proxy:
    name: nginx-proxy-ginfo
    external: true
  mailing:
    name: postfix-ginfo
    external: true
  internet:
    name: aaa_internet
    external: true
