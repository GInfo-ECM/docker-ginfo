version: '2'

services:
  db:
    build: mysql
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
    - interne

  wordpress:
    build:
      context: ./wordpress
      dockerfile: Dockerfile
      args:
        PROXY_HOST: ${PROXY_HOST}
        PROXY_PASS: ${PROXY_PASS}
        PROXY_USER: ${PROXY_USER}
    depends_on:
    - db
    volumes:
      - wp_data:/var/www/html
    restart: always
    networks:
    - interne
    - proxy
    - mailing
    - proxyhttp
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      NETWORK_ACCESS: ${NETWORK_ACCESS}
      TRUSTED_PROXIES: reverse-proxy

  save:
    build: save-strategy
    depends_on:
    - wordpress
    - db
    volumes:
    - wp_data:/site-to-save:ro
    - save_data:/saves
    restart: always
    networks:
    - interne
    environment:
      DB_HOST: db
      DB_USER: wordpress
      DB_PASSWORD: wordpress

volumes:
  db_data:
    name: db_data
  wp_data:
    name: wp_data
  save_data:
    name: save_data

networks:
  proxy:
    external:
      name: nginx-proxy-ginfo
  mailing:
    external:
      name: postfix-wordpress
  proxyhttp:
    external:
      name: bridge-squid-int
  interne:
    driver: bridge
    internal: true
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'